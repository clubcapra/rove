### ekf config file ###
ekf_filter_node_local:
    ros__parameters:
        frequency: 30.0
        two_d_mode: false
        publish_acceleration: true
        publish_tf: true

        map_frame: map              
        odom_frame: odom            
        base_link_frame: base_footprint
        world_frame: odom           

        odom0: /odom
        odom0_config: [true,  true,  true,
                       false, false, true,
                       false, false, false,
                       false, false, true,
                       false, false, false]
                       
        imu0: /imu
        imu0_config: [false, false, false,
                      true,  true,  true,
                      false, false, false,
                      false, false, false,
                      false, false, false]

ekf_filter_node_global:
    ros__parameters:
        frequency: 30.0
        two_d_mode: false
        publish_acceleration: true
        publish_tf: true

        map_frame: map              
        odom_frame: odom            
        base_link_frame: base_footprint
        world_frame: map           

        odom0: /odom
        odom0_config: [true,  true,  true,
                       false, false, true,
                       false, false, false,
                       false, false, true,
                       false, false, false]
                       
        imu0: /imu
        imu0_config: [false, false, false,
                      true,  true,  true,
                      false, false, false,
                      false, false, false,
                      false, false, false]

        # description from https://github.com/cra-ros-pkg/robot_localization/blob/ros2/params/ekf.yaml
        # Each sensor reading updates some or all of the filter's state. These options give you greater control over which
        # values from each measurement are fed to the filter. For example, if you have an odometry message as input, but only
        # want to use its Z position value, then set the entire vector to false, except for the third entry. The order of the
        # values is x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Note that not some message types
        # do not provide some of the state variables estimated by the filter. For example, a TwistWithCovarianceStamped message
        # has no pose information, so the first six values would be meaningless in that case. Each vector defaults to all false
        # if unspecified, effectively making this parameter required for each sensor.
        odom1: /odometry/gps
        odom1_config: [true,  true,  false,
                       false, false, false,
                       false, false, false,
                       false, false, false,
                       false, false, false]

navsat_transform:
  ros__parameters:
    frequency: 30.0
    delay: 3.0
    magnetic_declination_radians: 0.0
    yaw_offset: 0.0
    zero_altitude: true
    broadcast_utm_transform: true
    publish_filtered_gps: true
    use_odometry_yaw: true
    wait_for_datum: false 
