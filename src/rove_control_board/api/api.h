#pragma once
/* This was generated by capra_micro_comm.
* DO NOT EDIT
*/

#include <capra_comm.h>




// --- STRUCTS ---
struct Void
{
    euint8_t pad0;
};
static_assert(sizeof(Void) == 1);

struct Bool_
{
    eboolean_t b;
};
static_assert(sizeof(Bool_) == 1);

struct Byte
{
    euint8_t b;
};
static_assert(sizeof(Byte) == 1);

struct Short
{
    eint16_t s;
};
static_assert(sizeof(Short) == 2);

struct UShort
{
    euint16_t s;
};
static_assert(sizeof(UShort) == 2);

struct Int
{
    eint32_t i;
};
static_assert(sizeof(Int) == 4);

struct UInt
{
    euint32_t i;
};
static_assert(sizeof(UInt) == 4);

struct Long
{
    eint64_t l;
};
static_assert(sizeof(Long) == 8);

struct ULong
{
    euint64_t l;
};
static_assert(sizeof(ULong) == 8);

struct Float
{
    efloat_t f;
};
static_assert(sizeof(Float) == 4);

struct RGB
{
    euint8_t r;
    euint8_t g;
    euint8_t b;
    euint8_t pad0;
};
static_assert(sizeof(RGB) == 4);

struct RGBLed
{
    RGB rgb;
    euint8_t index;
};
static_assert(sizeof(RGBLed) == 5);

// --- COMMANDS ---
Int ping(Int);
static_assert((sizeof(Int)+1) == 5);

ULong hashCheck(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ setLEDFront(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

Bool_ setLEDBack(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

Bool_ setLEDStrobe(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

Bool_ getLEDFront(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ getLEDBack(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ getLEDStrobe(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ getGPIO1(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ setGPIO1(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

Bool_ getGPIO2(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ setGPIO2(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

Bool_ getGPIO3(Void);
static_assert((sizeof(Void)+1) == 2);

Bool_ setGPIO3(Bool_);
static_assert((sizeof(Bool_)+1) == 2);

RGB getRGBLed(Int);
static_assert((sizeof(Int)+1) == 5);

Bool_ setRGBLed(RGBLed);
static_assert((sizeof(RGBLed)+1) == 6);

static BaseFunction_ptr commands[] = {
    new Function<Int, Int>(&ping),
    new Function<ULong, Void>(&hashCheck),
    new Function<Bool_, Bool_>(&setLEDFront),
    new Function<Bool_, Bool_>(&setLEDBack),
    new Function<Bool_, Bool_>(&setLEDStrobe),
    new Function<Bool_, Void>(&getLEDFront),
    new Function<Bool_, Void>(&getLEDBack),
    new Function<Bool_, Void>(&getLEDStrobe),
    new Function<Bool_, Void>(&getGPIO1),
    new Function<Bool_, Bool_>(&setGPIO1),
    new Function<Bool_, Void>(&getGPIO2),
    new Function<Bool_, Bool_>(&setGPIO2),
    new Function<Bool_, Void>(&getGPIO3),
    new Function<Bool_, Bool_>(&setGPIO3),
    new Function<RGB, Int>(&getRGBLed),
    new Function<Bool_, RGBLed>(&setRGBLed),
};
#define COMMANDS_COUNT 16
#define MAX_DECODED_SIZE 9
#define MAX_ENCODED_SIZE 13
#define API_HASH 8296394150149560740UL